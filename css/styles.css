body{
  font-family: 'Merriweather', serif;
  /* 1. monospace: each character takes up same amount of width.
     2. serif (default): with tails. eg: Times New Roman
     3. san-serif: without tails. eg: Arial
Ask browser to try and render all text in Verdana font, if not use default.
  */
  /*border-top: solid #0f4c75;*/
  border-top-width: 70px;
  margin-top: 0px;
  margin-left: 0px;
  margin-right: 0px;
  margin-bottom: 0;
  /* or
  margin: 0;  means all four margins are 0*/
  text-align: center; /* center everything that doesn't have a width set!!*/
}
h1{
  font-size: 90px;
  /*doesn't change regardless the text size of the website cuz px is not dynamic*/
  /* To make it dynamic, use % / em:
  1. 100% (16px) == 562.5% (90px)
  2. 1em  (16px) ==5.625em (90px), 1 times width of capital letter of M.
** For em & %, font-size INHERITS parents' font-size
Eg: body{font-size: 2em;} h1{font-size: 2em}
h1 font-size becomes 4em.

To ignore parents' font-size, use rem (root em)
Eg: h1{font-size: 5.625rem;}
*/
  color: #ed6663;
  line-height: 2; /*1 is default, 2 is double the height*/
  /* for spacing between lines*/
  /* single value without unit!*/
  margin: 50px auto 0 auto;
  font-family: 'Sacramento', cursive;
/*
  width: 20%;  won't be centered despite text-align in body is centre.
  margin: 0   auto;  auto: center element either vertically/horizontally.
  - left & right set automatically to keep the text in the center, top & bottom is 0.*/
}
h2{
  color: #ee8572;
  font-family: "Montserrat", sans-serif;
  font-size: 2.5rem;
  font-weight: normal; /* to get rid of the prespecified bold*/
  /* get use number or words */
}
h3{
  color: #ff6f5e;
  font-family: "Montserrat", sans-serif;

}
hr{
  width: 5%;
  border-style: dotted none none;
  border-color: #dcd6f7;
  border-width: 10px;
}
div{
  /* hang a bit lower from the top as by default :
  1. body has margin of 8px
  2. h1 have margin-before & margin-after 0.67em*/
  /*background-color: #e4f9f5;*/
}

/*CSS Display Property
1. BLOCK: takes up the whole line.
Eg: <p>, <h1> to <h6>, <div>, <ol>, <ul>, <li>, <form>
Advantage: can change width, but still not other element are not on the same line.

2. INLINE: only takes up space it need in height and width.
Eg: <span>, <img>, <a>
Disadvantage: cannot change the width !!!

LUCKILY! can change display property,
display: inline;   //no longer can change width
display: block;    // can change width

3. INLINE-BLOCK: can change width while remain inline.
display: inline-block;
Eg: <img>

4. NONE: removes element from website as if didn't exist.
display: none;     //no space is left for it
visibility: hidden;
//element disappears but keeps original position, other elemetns flows around it.
*/


/*CSS Position Property
1. STATIC: (default)go along with HTML rules and keep to the default HTML flow.

2. RELATIVE: position relative to HOW IT WOULD HAVE BEEN POSITIONED HAD IT BEEN STATIC.
Eg:
img{position: relative, left: 30px;}
- gives image 30px of space between its left edge and where the left edge used to be.
img: {position: relative, right: 200px;}
- move left by 200px, if at the top right corner, it disappears.
** when you move an image down by 20px, it doesnt affect the position of anything
else on screen(MAY OVERLAP). It keeps its old position while everything else flows around it.
** if change coordinates property, we give its MARGIN.

3. ABSOLUTE: position image element, RELATIVE TO ITS PARENT ELEMENT.
Eg:
div{position: relative}
img{position: absolute; right: 30px}
- shift to the right of the screen (add a right 30px margin between image element and parent div).
** does affect the flow, it takes away the old position.

4. FIXED: will stay at the current position even you scroll, will appear in the screen.
*/
.bottom-container{
  background-image: linear-gradient(to bottom, #0f4c81, #1b262c);
  color: #11999e;
  padding: 30px;
 line-height: 2;
}
.btn{
  border-radius: 8px;
  padding: 10px 20px;
  color: #dcd6f7;
  font-family: sans-serif;
  font-stretch: semi-expanded;
  text-decoration: none;
/*  background-image: linear-gradient(to bottom, #0f4c81, #1b262c);*/
  background-color: #0f4c81;
}
a:hover{
  color: white;
}
.center{
  object-fit: cover;
  width: 250px;
  height: 100px;
  margin-top: 20px;
}
.cloud-bottom{
  position: absolute;
  top: 200px;
  left: 100px;
  width: 300px;

}
.cloud-top{
  position: absolute;
  top: 50px;
  right: 100px;
  width: 300px;
}
.copyright{
  color: #dcd6f7;
  font-family: sans-serif;
  font-stretch: semi-expanded;
}
.contact{
  margin-bottom: 50px;
}
.contact-me{
  margin: 0 50px 0 50px;
  line-height: 2;
  padding-bottom: 50px;
}
.footer-link{
    color: #dcd6f7;
    font-family: sans-serif;
    text-decoration: none;
    margin: auto 10px auto;
}
.get-in-touch{
  margin-top: 0;
}
.image{
  width: 25%;
  height:auto;
}
.middle-container{
position: relative;
padding-top: 50px;
background-color: #f1f3f4;
655c56
}
.right{
  float: right;
  margin-left: 30px;
}
.pro{
  text-decoration: underline; /*to underline a text*/
}
.profile{
    padding-bottom: 30px;
}
.profile-image{
  width: 10%;
  height: auto;
}
.left{
  float: left;
  /* float property: image floats left so text wrap around it*/
  margin-right: 30px;
}
.section{
  line-height: 2;
  margin: 100px auto 80px auto; /* auto left & right so is centered*/
  text-align: left;
  width: 50%;

}
.table2{
  margin: auto 10px auto;

}
.top-container{
  background-image: linear-gradient(to bottom, #1b262c, #0f4c81, #347474);
  padding: 100px 0 0 0;
  position: relative;
}
.tree{
width: 200px;
}

/* BOX MODEL /////////////////////////////////////////////////////////
width, height: can be specified  with solid # pixels or by %. eg: 300px width
border: can be specified with # pixels (can use 4 # for all sides) eg: 50px/side
padding: between border and text, increase size of box  eg: 20px
margins: buffer zone/space between elements, give space outside border. eg: 10px

*/
